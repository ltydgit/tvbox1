# 工作流名称：自动下载 PandaQ 文件并添加后缀
name: Auto-Download PandaQ File & Add Suffix

# 关键修复：添加权限配置，允许写入仓库内容
permissions:
  contents: write  # 授予修改仓库文件的权限（解决403错误）

# 触发条件：每日定时 + 手动触发
on:
  schedule:
    - cron: '0 2 * * *'  # UTC 02:00（北京时间 10:00）
  workflow_dispatch:

jobs:
  download-and-process:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository Code
        uses: actions/checkout@v4  # 检出仓库代码

      - name: Install Required Tools
        run: |
          sudo apt-get update
          sudo apt-get install -y curl
          echo "✅ 依赖工具已就绪"

      - name: Auto-Download File from Target URL
        run: |
          TARGET_URL="http://1.95.79.193:999/PandaQ"
          
          # 获取响应头提取文件名
          HEAD_RESPONSE=$(curl -I -s "$TARGET_URL")
          DOWNLOADED_FILENAME=$(echo "$HEAD_RESPONSE" | 
            grep -i 'Content-Disposition' | 
            awk -F 'filename=' '{print $2}' | 
            sed -e 's/["; ]//g')
          
          # 兜底文件名（含日期）
          if [ -z "$DOWNLOADED_FILENAME" ]; then
            DOWNLOADED_FILENAME="pandaq_auto_download_$(date +'%Y%m%d').dat"
          fi
          
          # 下载文件（添加浏览器伪装避免被拦截）
          curl -L -s -A "Mozilla/5.0 (Windows NT 10.0; Win64; x64) Chrome/124.0.0.0" \
            -o "$DOWNLOADED_FILENAME" "$TARGET_URL"
          
          # 验证下载结果
          if [ -s "$DOWNLOADED_FILENAME" ]; then
            echo "✅ 文件下载成功：$DOWNLOADED_FILENAME"
            echo "DOWNLOADED_FILENAME=$DOWNLOADED_FILENAME" >> "$GITHUB_ENV"
          else
            echo "❌ 下载失败，文件为空"
            exit 1
          fi

      - name: Add Custom Suffix to File
        run: |
          ORIGINAL_FILENAME="${{ env.DOWNLOADED_FILENAME }}"
          CUSTOM_SUFFIX=".pandaq_daily"  # 自定义后缀
          NEW_FILENAME="${ORIGINAL_FILENAME}${CUSTOM_SUFFIX}"
          mv "$ORIGINAL_FILENAME" "$NEW_FILENAME"
          echo "✅ 已添加后缀：$NEW_FILENAME"
          echo "NEW_FILENAME=$NEW_FILENAME" >> "$GITHUB_ENV"

      - name: Backup to Repository
        run: |
          BACKUP_FILE="${{ env.NEW_FILENAME }}"
          
          # 配置Git身份
          git config --global user.name "GitHub Actions"
          git config --global user.email "actions@github.com"
          
          # 提交文件
          if [ -f "$BACKUP_FILE" ]; then
            git add "$BACKUP_FILE"
            git commit -m "Backup: $BACKUP_FILE ($(date +'%Y-%m-%d'))"
            git push origin main  # 若分支为master，改为git push origin master
            echo "✅ 已备份到仓库"
          else
            echo "ℹ️ 无文件需备份"
          fi
